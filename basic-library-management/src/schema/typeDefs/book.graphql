scalar Date

type pageInfo {
  total: Int!
  pages: Int!
  currentPage: Int!
  hasNext: Boolean!
}

type BookConnection {
  books: [Book!]!
  pageInfo: pageInfo!
}

type Book {
  id: ID!
  title: String!
  author: Author!
  publishedYear: Int
  publishedDate: Date
  genre: String
}

input BookInput {
  title: String!
  authorId: ID!
  publishedYear: Int
  genre: String
}

type Query {
  books(
    page: Int
    limit: Int
    genre: String
    yearFrom: Int
    yearTo: Int
    searchTitle: String
  ): BookConnection!
  book(id: ID!): Book
}

type Mutation {
  createBook(input: BookInput!): Book
  updateBook(id: ID!, input: BookInput!): Book
  deleteBook(id: ID!): Boolean
}
